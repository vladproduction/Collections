public interface Collection<E>
extends Iterable<E>

The root interface in the collection hierarchy. A collection represents a group of objects, known as its elements.
Some collections allow duplicate elements and others do not. Some are ordered and others unordered.
The JDK does not provide any direct implementations of this interface: it provides implementations of more
specific sub_interfaces like Set and List.

Methods inherited from interface java.lang.Iterable:
-forEach();

by packages:
-Array;
-Set;
-List;
-Map;
-Queue;

methods summary:
-boolean	add(E e)
    Ensures that this collection contains the specified element (optional operation).

-boolean	addAll(Collection<? extends E> c)
    Adds all of the elements in the specified collection to this collection (optional operation).

-void	clear()
    Removes all of the elements from this collection (optional operation).

-boolean	contains(Object o)
    Returns true if this collection contains the specified element.

-boolean	containsAll(Collection<?> c)
    Returns true if this collection contains all of the elements in the specified collection.

-boolean	equals(Object o)
    Compares the specified object with this collection for equality.

-int	hashCode()
    Returns the hash code value for this collection.

-boolean	isEmpty()
    Returns true if this collection contains no elements.

-Iterator<E>	iterator()
    Returns an iterator over the elements in this collection.

-default Stream<E>	parallelStream()
    Returns a possibly parallel Stream with this collection as its source.

-boolean	remove(Object o)
    Removes a single instance of the specified element from this collection, if it is present (optional operation).

-boolean	removeAll(Collection<?> c)
    Removes all of this collection's elements that are also contained in the specified collection (optional operation).

-default boolean	removeIf(Predicate<? super E> filter)
    Removes all of the elements of this collection that satisfy the given predicate.

-boolean	retainAll(Collection<?> c)
    Retains only the elements in this collection that are contained in the specified collection (optional operation).

-int	size()
    Returns the number of elements in this collection.

-default Spliterator<E>	spliterator()
    Creates a Spliterator over the elements in this collection.

-default Stream<E>	stream()
    Returns a sequential Stream with this collection as its source.

-Object[]	toArray()
    Returns an array containing all of the elements in this collection.

-<T> T[]	toArray(T[] a)
    Returns an array containing all of the elements in this collection; the runtime type of the returned array is that of the specified array.